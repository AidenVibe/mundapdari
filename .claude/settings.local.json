{
  "permissions": {
    "allow": [
      "Bash(cat:*)",
      "Bash(mkdir:*)",
      "Bash(npm run db:migrate:*)",
      "Bash(npm install)",
      "Bash(mv:*)",
      "Bash(npm install:*)",
      "Bash(timeout 10 npm run dev)",
      "Bash(node:*)",
      "Bash(timeout 10s npm run dev)",
      "Bash(timeout 15s npm run dev)",
      "Bash(rm:*)",
      "Bash(npm run db:reset:*)",
      "Bash(timeout 5s npm run db:reset -- --confirm)",
      "Bash(curl:*)",
      "Bash(npm audit:*)",
      "Bash(npm run build:*)",
      "Bash(dir:*)",
      "Bash(npm run dev:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_type",
      "Bash(taskkill:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(git --version)",
      "Bash(git config:*)",
      "Bash(git init:*)",
      "Bash(git check-ignore:*)",
      "Bash(gh:*)",
      "Bash(git remote add:*)",
      "Bash(git branch:*)",
      "Bash(git add:*)",
      "Bash(git reset:*)",
      "mcp__playwright__browser_press_key",
      "Bash(git push:*)",
      "Bash(npx husky:*)",
      "mcp__playwright__browser_evaluate",
      "Bash(npm run lint:*)",
      "Bash(time npm run lint:*)",
      "Bash(time git commit -m \"🚀 성능 최적화: 커밋 속도 개선\n\n🔧 주요 개선사항:\n- ESLint 설정 추가로 린트 오류 해결\n- lint-staged 경로별 최적화\n- 최신 Husky 방식으로 전환\n- Git 설정 Windows 환경 최적화\n- .eslintignore로 불필요한 파일 제외\n\n⚡ 성능 향상:\n- 커밋 시간 대폭 단축\n- 린트 실행 시간 최적화\n- 불필요한 파일 스캔 제거\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(time git commit -m \"⚡ 커밋 성능 최적화 완료\n\n🔧 개선 내용:\n- ESLint 설정 추가 (백엔드)\n- lint-staged 단순화 (Prettier만 실행)\n- Husky 최신 방식 적용\n- Windows 환경 최적화\n\n⚡ 결과: 빠른 커밋 속도 달성\n\n🤖 Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git pull:*)",
      "Bash(git stash:*)",
      "Bash(time npx lint-staged --verbose)",
      "Bash(time prettier:*)",
      "Bash(time npx prettier --write \"backend/src/**/*.js\")",
      "Bash(powershell:*)",
      "Bash(npm:*)",
      "Bash(time:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(export NODE_OPTIONS=\"--max-old-space-size=2048 --optimize-for-size\")",
      "Bash(export NODE_ENV=production)",
      "Bash(export NODE_OPTIONS=\"--max-old-space-size=2048\")",
      "Bash(LINT_STAGED_LOGFILE=/dev/null time node ./node_modules/lint-staged/bin/lint-staged.js --quiet)",
      "Bash(LINT_STAGED_LOGFILE=/dev/null /usr/bin/time node ./node_modules/lint-staged/bin/lint-staged.js --quiet)",
      "mcp__playwright__browser_console_messages",
      "mcp__playwright__browser_wait_for",
      "Bash(npx simple-git-hooks:*)",
      "Bash(chmod:*)",
      "Bash(npm run:*)",
      "Bash(sqlite3:*)",
      "mcp__playwright__browser_take_screenshot",
      "mcp__context7__resolve-library-id",
      "Bash(tasklist)",
      "Bash(taskkill:*)",
      "Bash(wmic process where:*)",
      "Bash(git fsck:*)",
      "Bash(git update-index:*)",
      "Bash(echo $PORT)",
      "mcp__magic__21st_magic_component_builder",
      "mcp__magic__21st_magic_component_inspiration",
      "mcp__playwright__browser_resize"
    ],
    "deny": [],
    "ask": []
  }
}